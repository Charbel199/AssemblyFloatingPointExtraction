00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/13/2020 9:21:50 PM

00001000                             1                  ORG     $1000
00001000= 40390000                   2  Input_1         DC.L $40390000
00001004= 40006000                   3  Input_2         DC.L $40006000
00001008= 0011                       4  Exponent_Bits   DC.W $11
0000100A                             5  Product         DS.L 1
0000100E                             6  Sign_1          DS.W 1
00001010                             7  Exponent_1      DS.L 1
00001014                             8  Mantissa_1      DS.L 1
00001018                             9  Sign_2          DS.W 1
0000101A                            10  Exponent_2      DS.L 1
0000101E                            11  Mantissa_2      DS.L 1
00001022                            12  
00001022                            13  
00002000                            14                  ORG $2000
00002000  4E50 FFFC                 15  Subroutine_1    LINK A0,#-4 **opening a stack frame maybe for bias
00002004                            16  
00002004  48E7 7840                 17                  MOVEM.L D1-D4/A1,-(SP) **Storing used registers on stack
00002008                            18  
00002008  7400                      19                  MOVEQ #0,D2 **Clear D2
0000200A                            20                  **all LEA +4 since based on A0 (base of stackframe)
0000200A                            21  
0000200A  43E8 001A                 22                  LEA (26,A0),A1 
0000200E  3251                      23                  MOVE.W (A1),A1 **Original number address
00002010  2211                      24                  MOVE.L (A1),D1 **Original number
00002012                            25                  
00002012  6A02                      26                  BPL.S POSITIVE
00002014                            27                  
00002014  7401                      28  NEGATIVE        MOVEQ #1,D2 **Storing sign in register
00002016                            29              
00002016                            30                  **Maybe instead of LEA directly move.L to register
00002016  43E8 0016                 31  POSITIVE        LEA (22,A0),A1 
0000201A  3251                      32                  MOVE.W (A1),A1 **Number of exponent bits address
0000201C  3611                      33                  MOVE.W (A1),D3 ** number of exponent bits
0000201E                            34                  
0000201E                            35          
0000201E                            36                  
0000201E  43E8 0012                 37                  LEA (18,A0),A1 
00002022  3251                      38                  MOVE.W (A1),A1 **Address for sign                
00002024  3282                      39                  MOVE.W D2,(A1) **Storing sign in memory
00002026                            40               
00002026                            41                  
00002026                            42                  **Until this point: The sign is stored in memory
00002026                            43                          **          D1 has the original number
00002026                            44                          **          D3 has the number of exponen bits
00002026                            45                          **          D2 was used to get the sign
00002026                            46  
00002026                            47                  
00002026                            48                  
00002026                            49                  
00002026  781F                      50                  MOVEQ #31,D4 **32 bit number - 1 for sign
00002028  9843                      51                  SUB.W D3,D4 **Storing the number of mantissa bits in D4(31 - number of exponent bits)
0000202A                            52   
0000202A                            53                          **          D4 was used to get the number of mantissa bits
0000202A                            54   
0000202A  5343                      55                  SUBQ #1,D3 ** D3 has become number of exponent bits - 1
0000202C  7401                      56                  MOVEQ #1,D2
0000202E  E7A2                      57                  ASL.L D3,D2 **2^(number of exponent bits -1)-1
00002030  5382                      58                  SUB.L #1,D2 **D2 is the bias
00002032                            59                  
00002032                            60                          **          D2 has now the the bias 
00002032                            61                                                                                  
00002032  2141 FFFC                 62                  MOVE.L D1,(-4,A0) **Duplicating original number and storing it in the stack frame
00002036                            63            
00002036                            64               
00002036  5443                      65                  ADDQ #2,D3  **number of exponents bits + 1 (Sign)
00002038  E7A1                      66                  ASL.L D3,D1 **D6 is our final mantissa (Shifted the mantissa to the left by the number of exponents bits + 1     
0000203A                            67  
0000203A                            68                                        
0000203A  43E8 000A                 69                  LEA (10,A0),A1 
0000203E  3251                      70                  MOVE.W (A1),A1     
00002040  2281                      71                  MOVE.L D1,(A1) **Mantissa stored
00002042                            72                  
00002042                            73                  
00002042  2228 FFFC                 74                  MOVE.L (-4,A0),D1 **Fetching the original number duplicate from the stack frame
00002046                            75                  
00002046  C2BC 7FFFFFFF             76                  AND.L #$7FFFFFFF,D1 **Set MSB to 0 (For ASR)
0000204C  E8A1                      77                  ASR.L D4,D1 **Moving our exponent by the number of mantissa bits to the right
0000204E  9282                      78                  SUB.L D2,D1 **Removing the bias from it
00002050                            79                  
00002050  43E8 000E                 80                  LEA (14,A0),A1 
00002054  3251                      81                  MOVE.W (A1),A1               
00002056  2281                      82                  MOVE.L D1,(A1) **Exponent stored
00002058                            83                  
00002058  4CDF 021E                 84                  MOVEM.L (SP)+,D1-D4/A1 **Restoing used registers
0000205C  4E58                      85                  UNLK A0
0000205E  4E75                      86                  RTS            
00002060                            87                 
00002060                            88                 
00002060                            89                 
00002060                            90                 
00002060                            91                 
00002060                            92                 
00002060                            93                 
00002060                            94                 
00002060                            95  
00003000                            96                  ORG $3000
00003000  48E7 7F7E                 97  Subroutine_2    MOVEM.L D1-D7/A1-A6,-(SP) **Storing used registers on stack
00003004                            98  
00003004  226F 0044                 99                  MOVEA.L (68,SP),A1 **Address of Input 1
00003008  246F 0040                100                  MOVEA.L (64,SP),A2 **Address of Input 2
0000300C  266F 003C                101                  MOVEA.L (60,SP),A3 **Address of number of exponent bits
00003010  2C6F 0038                102                  MOVEA.L (56,SP),A6 **Address of product result
00003014                           103                            
00003014                           104  
00003014                           105                  **Preparing stack frame for subroutine 1     
00003014  4E50 FFEC                106                  LINK A0,#-20
00003018                           107                
00003018                           108                  
00003018  2149 FFFC                109                  MOVE.L A1,(-4,A0) **Address of input 1 on stack
0000301C  214B FFF8                110                  MOVE.L A3,(-8,A0) **Address of number of exponent bits on stack
00003020  49E8 FFF4                111                  LEA (-12,A0),A4
00003024  214C FFF4                112                  MOVE.L A4,(-12,A0) **Storing sign
00003028  49E8 FFF0                113                  LEA (-16,A0),A4
0000302C  214C FFF0                114                  MOVE.L A4,(-16,A0) **Sotring exponent
00003030  49E8 FFEC                115                  LEA (-20,A0),A4
00003034  214C FFEC                116                  MOVE.L A4,(-20,A0) **Storing mantissa
00003038                           117                  
00003038                           118                  
00003038  6100 EFC6                119                  BSR Subroutine_1
0000303C                           120                  **Stack is now pointing at the top of the stack frame(Where the mantissa is)
0000303C                           121                  
0000303C                           122                  **Testing if subroutine performed correctly
0000303C  3028 FFF4                123                  MOVE.W (-12,A0),D0 **sign1
00003040  2228 FFF0                124                  MOVE.L (-16,A0),D1 **exponent1
00003044  2428 FFEC                125                  MOVE.L (-20,A0),D2 **mantissa1
00003048                           126                  
00003048                           127                  
00003048                           128                  **Preparing stack frame for subroutine 1 
00003048  4E55 FFEC                129                  LINK A5,#-20
0000304C                           130                  
0000304C  2B4A FFFC                131                  MOVE.L A2,(-4,A5) **Address of input 2 on stack
00003050  2B4B FFF8                132                  MOVE.L A3,(-8,A5) **Address of number of exponent bits on stack
00003054  49ED FFF4                133                  LEA (-12,A5),A4
00003058  2B4C FFF4                134                  MOVE.L A4,(-12,A5) **Storing sign 
0000305C  49ED FFF0                135                  LEA (-16,A5),A4
00003060  2B4C FFF0                136                  MOVE.L A4,(-16,A5) **Sotring exponent 
00003064  49ED FFEC                137                  LEA (-20,A5),A4
00003068  2B4C FFEC                138                  MOVE.L A4,(-20,A5) **Storing mantissa 
0000306C                           139                  
0000306C  6100 EF92                140                  BSR Subroutine_1
00003070                           141                  
00003070                           142                  **Testing if subroutine performed correctly
00003070  362D FFF4                143                  MOVE.W (-12,A5),D3 **sign2
00003074  282D FFF0                144                  MOVE.L (-16,A5),D4 **exponent2
00003078  2A2D FFEC                145                  MOVE.L (-20,A5),D5 **mantissa2
0000307C                           146                  
0000307C                           147                  **Logic of multiplication:
0000307C                           148                  
0000307C  B103                     149                  EOR.B D0,D3         **getting sign   
0000307E  D881                     150                  ADD.L D1,D4         **getting exponent (Before normalization if needed)
00003080                           151                  
00003080                           152                  
00003080                           153                  **Shifted by 1 to add the hidden bit, then shifted by 16 (To take a word space)
00003080  E282                     154                  ASR.L #1,D2
00003082  E285                     155                  ASR.L #1,D5
00003084  84BC 80000000            156                  OR.L #$80000000,D2
0000308A  8ABC 80000000            157                  OR.L #$80000000,D5
00003090                           158     
00003090  7E10                     159                  MOVEQ #16,D7
00003092  EEA2                     160                  ASR.L D7,D2
00003094  EEA5                     161                  ASR.L D7,D5
00003096                           162                  
00003096                           163                  
00003096                           164                  
00003096                           165                  
00003096  CAC2                     166                  MULU D2,D5
00003098                           167                  **Normalization:  
00003098                           168                  
00003098  6A08                     169                  BPL.S POS
0000309A  E385                     170  NEG             ASL.L #1,D5
0000309C  5284                     171                  ADD.L #1,D4
0000309E  6000 0004                172                  BRA ENDOFSUBROUTINE2
000030A2                           173                  
000030A2  E585                     174  POS             ASL.L #2,D5
000030A4                           175                  
000030A4                           176  
000030A4                           177  **Only thing left to do is reconstruct the product
000030A4                           178  ** new sign in D3, exponent in D4, mantissa in D5
000030A4                           179  
000030A4                           180  
000030A4  E285                     181  ENDOFSUBROUTINE2              ASR.L #1,D5
000030A6  CABC 7FFFFFFF            182                                AND.L #$7FFFFFFF,D5
000030AC  3E13                     183                                MOVE.W (A3),D7 **D7 has become the number of exponent bits               
000030AE  EEA5                     184                                ASR.L D7,D5   **Shifted by number of exponent bits + 1 in total 
000030B0                           185                                
000030B0                           186  
000030B0  5347                     187                                SUBQ #1,D7 ** D7 has become number of exponent bits - 1
000030B2  7401                     188                                MOVEQ #1,D2 
000030B4  EFA2                     189                                ASL.L D7,D2 **2^(number of exponent bits -1)-1
000030B6  5382                     190                                SUB.L #1,D2 **D2 is the bias    
000030B8                           191  
000030B8                           192  
000030B8                           193                            
000030B8  D882                     194                                ADD.L D2,D4 **Adding the bias to the exponent
000030BA                           195                              
000030BA                           196                          
000030BA                           197                              
000030BA  721E                     198                                MOVEQ #30,D1
000030BC  9287                     199                                SUB.L D7, D1 **30 - (number of exponent bits - 1) = number of mantissa bits
000030BE                           200                                              **D1 has now the number of mantissa bits
000030BE                           201  
000030BE                           202                            
000030BE  E3A4                     203                                ASL.L D1,D4
000030C0  8A84                     204                                OR.L D4,D5
000030C2                           205                               
000030C2                           206                                
000030C2                           207                                **Checking the sign
000030C2  4A83                     208                                TST.L D3
000030C4  6706                     209                                BEQ.S STOREINMEMORY
000030C6  8ABC 80000000            210                                OR.L #$80000000,D5
000030CC                           211                                **Moving product to memory
000030CC                           212                                
000030CC                           213  STOREINMEMORY                 
000030CC  2C85                     214                                MOVE.L D5,(A6)
000030CE  4E5D                     215                                UNLK A5
000030D0  4E58                     216                                UNLK A0
000030D2  4CDF 7EFE                217                                MOVEM.L (SP)+,D1-D7/A1-A6 **Restoing used registers
000030D6                           218  
000030D6                           219       
000030D6                           220  
000030D6                           221  
000030D6                           222  
000030D6                           223  
000030D6                           224  
000030D6                           225  
000030D6                           226  
000030D6                           227  
000030D6                           228  
000030D6                           229  
000030D6  4E75                     230                    RTS
000030D8                           231                  
000030D8                           232                  
000030D8                           233  
000030D8                           234  
000030D8                           235  
000030D8                           236  
000030D8                           237  
000030D8                           238  
000030D8                           239  
000030D8                           240  
000030D8                           241  
000030D8                           242  
000030D8                           243  
000030D8                           244  
000030D8                           245  **Main:
000030D8                           246  
00000400                           247                  ORG $400
00000400                           248  
00000400                           249                  
00000400                           250  MAIN           
00000400                           251  
00000400                           252  
00000400                           253  
00000400                           254                  
00000400  4878 1000                255                  PEA Input_1
00000404  4878 1008                256                  PEA Exponent_Bits
00000408  4878 100E                257                  PEA Sign_1
0000040C  4878 1010                258                  PEA Exponent_1
00000410  4878 1014                259                  PEA Mantissa_1
00000414  6100 1BEA                260                  BSR Subroutine_1
00000418  4FEF 0014                261                  LEA ($14,SP),SP
0000041C                           262                 ** Stack pointer back to normal
0000041C                           263  
0000041C                           264  
0000041C                           265  
0000041C                           266  
0000041C                           267  
0000041C                           268                  END MAIN

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ENDOFSUBROUTINE2    30A4
EXPONENT_1          1010
EXPONENT_2          101A
EXPONENT_BITS       1008
INPUT_1             1000
INPUT_2             1004
MAIN                400
MANTISSA_1          1014
MANTISSA_2          101E
NEG                 309A
NEGATIVE            2014
POS                 30A2
POSITIVE            2016
PRODUCT             100A
SIGN_1              100E
SIGN_2              1018
STOREINMEMORY       30CC
SUBROUTINE_1        2000
SUBROUTINE_2        3000
