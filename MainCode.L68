00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/11/2020 10:50:57 AM

00001000                             1                  ORG     $1000
00001000= 3F000000                   2  Input_1         DC.L $3F000000
00001004= 3F000000                   3  Input_2         DC.L $3F000000
00001008= 0008                       4  Exponent_Bits   DC.W $8
0000100A                             5  Product         DS.L 1
0000100E                             6  Sign_1          DS.W 1
00001010                             7  Exponent_1      DS.L 1
00001014                             8  Mantissa_1      DS.L 1
00001018                             9  Sign_2          DS.W 1
0000101A                            10  Exponent_2      DS.L 1
0000101E                            11  Mantissa_2      DS.L 1
00001022                            12  
00001022                            13  
00002000                            14                  ORG $2000
00002000  4E50 FFFC                 15  Subroutine_1    LINK A0,#-4 **opening a stack frame maybe for bias
00002004                            16  
00002004  48E7 7840                 17                  MOVEM.L D1-D4/A1,-(SP) **should store the used ones
00002008                            18  
00002008  4282                      19                  CLR.L D2 **Clear D2
0000200A                            20                  **all LEA +4 since based on A0 (base of stackframe)
0000200A                            21  
0000200A  43E8 001A                 22                  LEA (26,A0),A1 **26 not 24to only get the word
0000200E  3251                      23                  MOVE.W (A1),A1 **Original number address
00002010  2211                      24                  MOVE.L (A1),D1 **Original number
00002012                            25                  
00002012  6A02                      26                  BPL.S POSITIVE
00002014                            27                  
00002014  7401                      28  NEGATIVE        MOVEQ #1,D2 **Storing sign in register
00002016                            29              
00002016                            30                  **Maybe instead of LEA directly move.L to register
00002016  43E8 0016                 31  POSITIVE        LEA (22,A0),A1 **22 not 20 to only get the word
0000201A  3251                      32                  MOVE.W (A1),A1 **Number of exponent bits address
0000201C  3611                      33                  MOVE.W (A1),D3 ** number of exponent bits
0000201E                            34                  
0000201E                            35          
0000201E                            36                  
0000201E  43E8 0012                 37                  LEA (18,A0),A1 **18 not 16 to only get the word
00002022  3251                      38                  MOVE.W (A1),A1 **Address for sign
00002024                            39            
00002024                            40                  
00002024  3282                      41                  MOVE.W D2,(A1) **Storing sign in memory
00002026                            42               
00002026                            43                  
00002026                            44                  **Until this point: The sign is stored in memory
00002026                            45                          **          D1 has the original number
00002026                            46                          **          D3 has the number of exponen bits
00002026                            47                          **          D2 was used to get the sign
00002026                            48  
00002026                            49                  
00002026                            50                  
00002026                            51                  
00002026  781F                      52                  MOVEQ #31,D4 **32 bit number - 1 for sign
00002028  9843                      53                  SUB.W D3,D4 **Storing the number of mantissa bits in D4(31 - number of exponent bits)
0000202A                            54   
0000202A                            55                          **          D4 was used to get the number of mantissa bits
0000202A                            56   
0000202A  5343                      57                  SUBQ #1,D3 ** D3 has become number of exponent bits - 1
0000202C  7401                      58                  MOVEQ #1,D2
0000202E  E7A2                      59                  ASL.L D3,D2 **2^(number of exponent bits -1)-1
00002030  5382                      60                  SUB.L #1,D2 **D2 is the bias
00002032                            61                  
00002032                            62                          **          D2 has now the the bias MAYBE STORE IT IN LINK ?
00002032                            63                                                                                  
00002032  2F01                      64                  MOVE.L D1,-(SP) **Duplicating original number and storing it on the stack
00002034                            65            
00002034                            66               
00002034  5443                      67                  ADDQ #2,D3  **number of exponents bits + 1 (Sign)
00002036  E7A1                      68                  ASL.L D3,D1 **D6 is our final mantissa (Shifted the mantissa to the left by the number of exponents bits + 1     
00002038                            69  
00002038                            70                                        
00002038  43E8 000A                 71                  LEA (10,A0),A1 **6 not 4 to only get the word
0000203C  3251                      72                  MOVE.W (A1),A1
0000203E                            73                  
0000203E  2281                      74                  MOVE.L D1,(A1) **Mantissa stored
00002040                            75                  
00002040                            76                  
00002040  221F                      77                  MOVE.L (SP)+,D1 **Fetching the original number duplicate from the stack
00002042                            78                  
00002042  C2BC 7FFFFFFF             79                  AND.L #$7FFFFFFF,D1 **Set MSB to 0 (For ASR)
00002048  E8A1                      80                  ASR.L D4,D1 **Moving our exponent by the number of mantissa bits to the right
0000204A  9282                      81                  SUB.L D2,D1 **Removing the bias from it
0000204C                            82                  
0000204C  43E8 000E                 83                  LEA (14,A0),A1 **14 not 12 to only get the word
00002050  3251                      84                  MOVE.W (A1),A1
00002052                            85                  
00002052  2281                      86                  MOVE.L D1,(A1) **Exponent stored
00002054                            87                  
00002054  4CDF 021E                 88                  MOVEM.L (SP)+,D1-D4/A1
00002058  4E58                      89                  UNLK A0
0000205A  4E75                      90                  RTS            
0000205C                            91                 
0000205C                            92                 
0000205C                            93   **TEST: Store bias in stack frame and reuse D2              
0000205C                            94                 
0000205C                            95                 
0000205C                            96                 
0000205C                            97                 
0000205C                            98                 
0000205C                            99                 
0000205C                           100                 **Shouldn't forget to store registers
00003000                           101                  ORG $3000
00003000  48E7 7F7E                102  Subroutine_2    MOVEM.L D1-D7/A1-A6,-(SP) **should store the used ones
00003004                           103  
00003004  226F 0044                104                  MOVEA.L (68,SP),A1 **Address of Input 1
00003008  246F 0040                105                  MOVEA.L (64,SP),A2 **Address of Input 2
0000300C  266F 003C                106                  MOVEA.L (60,SP),A3 **Address of number of exponent bits
00003010  2C6F 0038                107                  MOVEA.L (56,SP),A6 **Address of product result
00003014                           108                            
00003014                           109  
00003014                           110                  **Preparing stack frame for subroutine 1     
00003014  4E50 FFEC                111                  LINK A0,#-20
00003018                           112                
00003018                           113                  
00003018  2149 FFFC                114                  MOVE.L A1,(-4,A0) **Address of input 1 on stack
0000301C  214B FFF8                115                  MOVE.L A3,(-8,A0) **Address of number of exponent bits on stack
00003020  49E8 FFF4                116                  LEA (-12,A0),A4
00003024  214C FFF4                117                  MOVE.L A4,(-12,A0) **Storing sign
00003028  49E8 FFF0                118                  LEA (-16,A0),A4
0000302C  214C FFF0                119                  MOVE.L A4,(-16,A0) **Sotring exponent
00003030  49E8 FFEC                120                  LEA (-20,A0),A4
00003034  214C FFEC                121                  MOVE.L A4,(-20,A0) **Storing mantissa
00003038                           122                  
00003038                           123                  
00003038  6100 EFC6                124                  BSR Subroutine_1
0000303C                           125                  **Stack is now pointing at the top of the stack frame(Where the mantissa is)
0000303C                           126                  
0000303C                           127                  **Testing if subroutine performed correctly
0000303C  2028 FFF4                128                  MOVE.L (-12,A0),D0 **sign1
00003040  2228 FFF0                129                  MOVE.L (-16,A0),D1 **exponent1
00003044  2428 FFEC                130                  MOVE.L (-20,A0),D2 **mantissa1
00003048                           131                  
00003048                           132                  
00003048                           133                  **Preparing stack frame for subroutine 1 
00003048  4E55 FFEC                134                  LINK A5,#-20
0000304C                           135                  
0000304C  2B4A FFFC                136                  MOVE.L A2,(-4,A5) **Address of input 2 on stack
00003050  2B4B FFF8                137                  MOVE.L A3,(-8,A5) **Address of number of exponent bits on stack
00003054  49ED FFF4                138                  LEA (-12,A5),A4
00003058  2B4C FFF4                139                  MOVE.L A4,(-12,A5) **Storing sign 
0000305C  49ED FFF0                140                  LEA (-16,A5),A4
00003060  2B4C FFF0                141                  MOVE.L A4,(-16,A5) **Sotring exponent 
00003064  49ED FFEC                142                  LEA (-20,A5),A4
00003068  2B4C FFEC                143                  MOVE.L A4,(-20,A5) **Storing mantissa 
0000306C                           144                  
0000306C  6100 EF92                145                  BSR Subroutine_1
00003070                           146                  
00003070                           147                  **Testing if subroutine performed correctly
00003070  262D FFF4                148                  MOVE.L (-12,A5),D3 **sign2
00003074  282D FFF0                149                  MOVE.L (-16,A5),D4 **exponent2
00003078  2A2D FFEC                150                  MOVE.L (-20,A5),D5 **mantissa2
0000307C                           151                  
0000307C                           152                  **Logic of multiplication:
0000307C                           153                  
0000307C  B103                     154                  EOR.B D0,D3 
0000307E  D881                     155                  ADD.L D1,D4
00003080                           156                  
00003080                           157                  **Shifted by 1 to add the hidden bit, then shifted by 16 (To take a word space)
00003080  E282                     158                  ASR.L #1,D2
00003082  E285                     159                  ASR.L #1,D5
00003084  84BC 80000000            160                  OR.L #$80000000,D2
0000308A  8ABC 80000000            161                  OR.L #$80000000,D5
00003090                           162                  
00003090                           163                  
00003090                           164                  
00003090  1E3C 0010                165                  MOVE.B #16,D7
00003094  EEA2                     166                  ASR.L D7,D2
00003096  EEA5                     167                  ASR.L D7,D5
00003098                           168                  
00003098                           169                  
00003098                           170                  
00003098                           171                  
00003098  CAC2                     172                  MULU D2,D5
0000309A  6A00 000A                173                  BPL POS
0000309E  E385                     174  NEG             ASL.L #1,D5
000030A0  5284                     175                  ADD.L #1,D4
000030A2  6000 0004                176                  BRA ENDOFSUBROUTINE2
000030A6                           177                  
000030A6  E585                     178  POS             ASL.L #2,D5
000030A8                           179                  
000030A8                           180  
000030A8                           181  **Only thing left to do is reconstruct the product
000030A8                           182  ** new test sign in D3, exponent in D4, mantissa in D5
000030A8  1E3C 0009                183  ENDOFSUBROUTINE2              MOVE.B #9,D7 **Shift by number of exponent bits + 1
000030AC                           184  
000030AC  EEA5                     185                                ASR.L D7,D5
000030AE  0684 0000007F            186                                ADD.L #127,D4 **Make adding bias general
000030B4  1E3C 0017                187                                MOVE.B #23,D7 **Shift by number of mantissa bits
000030B8  EFA4                     188                                ASL.L D7,D4
000030BA  8A84                     189                                OR.L D4,D5
000030BC                           190                                ** sign still not done
000030BC                           191                                
000030BC                           192                                **Should store it in product location in memory
000030BC  4DD6                     193                      LEA (A6),A6
000030BE  2C85                     194                      MOVE.L D5,(A6)
000030C0  4E5D                     195                      UNLK A5
000030C2  4E58                     196                      UNLK A0
000030C4  4CDF 7EFE                197                      MOVEM.L (SP)+,D1-D7/A1-A6
000030C8                           198  
000030C8                           199       
000030C8                           200  
000030C8                           201  
000030C8                           202  
000030C8                           203  
000030C8                           204  
000030C8                           205  
000030C8                           206  
000030C8                           207  
000030C8                           208  
000030C8                           209  
000030C8  4E75                     210                    RTS
000030CA                           211                  
000030CA                           212                  
000030CA                           213  
000030CA                           214  
000030CA                           215  
000030CA                           216  
000030CA                           217  
000030CA                           218  
000030CA                           219  
000030CA                           220  
000030CA                           221  
000030CA                           222  
000030CA                           223  
000030CA                           224  
000030CA                           225  
000030CA                           226  
00000400                           227                  ORG $400
00000400                           228  
00000400                           229  
00000400  2E7C 00004000            230  START           MOVEA.L #$4000,A7
00000406  4878 1000                231                  PEA Input_1
0000040A  4878 1008                232                  PEA Exponent_Bits
0000040E  4878 100E                233                  PEA Sign_1
00000412  4878 1010                234                  PEA Exponent_1
00000416  4878 1014                235                  PEA Mantissa_1
0000041A                           236                  
0000041A                           237                  **Testing if registers are still the same
0000041A  223C 00012309            238                  MOVE.L #$12309,D1 
00000420  243C 00001234            239                  MOVE.L #$1234,D2
00000426  263C 00001234            240                  MOVE.L #$1234,D3
0000042C  283C 00001234            241                  MOVE.L #$1234,D4
00000432  227C 00001230            242                  MOVEA.L #$1230,A1
00000438                           243                  
00000438                           244                  
00000438  6100 1BC6                245                  BSR Subroutine_1
0000043C  4FEF 0014                246                  LEA ($14,SP),SP
00000440                           247                  **Stack pointer back to normal
00000440                           248                  
00000440                           249                  
00000440                           250                  
00000440                           251                  **PART 2:
00000440                           252                  
00000440                           253                  
00000440  2E7C 00005000            254                  MOVEA.L #$5000,A7
00000446  4878 1000                255                  PEA Input_1
0000044A  4878 1004                256                  PEA Input_2
0000044E  4878 1008                257                  PEA Exponent_Bits
00000452  4878 100A                258                  PEA Product
00000456  6100 2BA8                259                  BSR Subroutine_2
0000045A                           260                  **Return stack as it was
0000045A  4FEF 0010                261                  LEA ($10,SP),SP
0000045E                           262                  **Stack pointer back to normal
0000045E                           263  
0000045E                           264  
0000045E                           265  
0000045E                           266  
0000045E                           267  
0000045E                           268                  END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ENDOFSUBROUTINE2    30A8
EXPONENT_1          1010
EXPONENT_2          101A
EXPONENT_BITS       1008
INPUT_1             1000
INPUT_2             1004
MANTISSA_1          1014
MANTISSA_2          101E
NEG                 309E
NEGATIVE            2014
POS                 30A6
POSITIVE            2016
PRODUCT             100A
SIGN_1              100E
SIGN_2              1018
START               400
SUBROUTINE_1        2000
SUBROUTINE_2        3000
